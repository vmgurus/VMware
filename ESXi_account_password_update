# Define the list of vCenter servers
$vCenterServers = @(
    "vcenter1.example.com",
    "vcenter2.example.com",
    "vcenter3.example.com"
)

# Define the password details
$newPassword = "<newpassword>"
$report = @()

# Iterate through each vCenter server
foreach ($vCenterServer in $vCenterServers) {
    # Connect to the vCenter server
    Connect-VIServer -Server $vCenterServer -User <username> -Password <password>

    # Get all ESXi hosts from the vCenter server
    $esxiHosts = Get-VMHost

    # Iterate through each ESXi host
    foreach ($esxiHost in $esxiHosts) {
        $esxiHostName = $esxiHost.Name.Split(".")[0]
        $localAccount = "vcf-svc-$esxiHostName"

        $changeStatus = $null

        # Retrieve the local account
        $account = Get-VMHostAccount -VMHost $esxiHost | Where-Object {$_.Id -eq $localAccount}

        if ($account) {
            try {
                # Set the new password for the local account
                Set-VMHostAccount -UserAccount $account -Password $newPassword -Confirm:$false
                $changeStatus = "Success"
            } catch {
                $changeStatus = "Failed"
            }

            $reportEntry = [PSCustomObject]@{
                "vCenterServer" = $vCenterServer
                "ESXiHost" = $esxiHostName
                "Account" = $localAccount
                "Status" = $changeStatus
            }

            $report += $reportEntry

            Write-Host "Password change $changeStatus for account '$localAccount' on host '$esxiHostName'."
        } else {
            Write-Host "Local account '$localAccount' not found on host '$esxiHostName'."
        }
    }

    # Disconnect from the vCenter server
    Disconnect-VIServer -Server $vCenterServer -Confirm:$false

    Write-Host
}

# Generate report
$report | Export-Csv -Path "PasswordChangeReport.csv" -NoTypeInformation
Replace <username> and <password> with the appropriate credentials for your vCenter servers. Modify the list of vCenter servers in the $vCenterServers array as needed. Replace <newpassword> with the desired new password.

In this updated script, we iterate through each vCenter server, connect to it, retrieve the ESXi hosts using Get-VMHost, and iterate through each ESXi host. We modify the ESXi hostname to remove the .wel.net suffix. Then, we retrieve the local account, change its password using Set-VMHostAccount, and store the success or failure status in the report.

After processing each vCenter server, the script disconnects from the vCenter servers. Finally, it generates a report by exporting the $report array to a CSV file named "PasswordChangeReport.csv".

Please ensure that you have the necessary permissions to connect to the vCenter servers, change the local account passwords, and write to the report file.






Regenerate response
